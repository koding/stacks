#===Custom Variables
# You can define your custom variables, and use them in your stack template.
# These variables will not be visible to your non-admins.
#
# This is a YAML file, you can define a key-value pair like this here;
#
#   foo: bar
#
# and you can use that variable in your stack template as below;
#
#   ${var.custom_foo}
VKEY_COUNTRY: "US"
VKEY_PROVINCE: "CA"
VKEY_CITY: "SanFrancisco"
VKEY_ORG: "Koding"
VKEY_EMAIL: "hector@koding.com"
VKEY_OU: "DevOps"

#===STACK
# Here is your stack preview
# You can make advanced changes like modifying your VM,
# installing packages, and running shell commands.

provider:
  aws:
    access_key: '${var.aws_access_key}'
    secret_key: '${var.aws_secret_key}'
resource:
  aws_instance:
    # this is the name of your VM
    openvpn:
      # select your instance_type here: eg. c3.xlarge
      instance_type: t2.medium
      # select your ami (optional) eg. ami-xxxxx (it should be based on ubuntu 14.04)
      ami: ''
      # we will tag the instance here so you can identify it when you login to your AWS console
      tags:
        Name: '${var.koding_user_username}-${var.koding_group_slug}'
      # on user_data section we will write bash and configure our VM
      user_data: |-
        # user_data Script:
        set -e
        export DEBIAN_FRONTEND=noninteractive
        #Adding new source
        #apt-key adv --keyserver pgp.mit.edu --recv-keys 5072E1F5
        DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
        CODENAME=$(lsb_release -cs)
        #Getting user name and IP
        export KODING_USER=${var.koding_user_username}
        IPVAR=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
        #Java Rep
        add-apt-repository ppa:openjdk-r/ppa
        #Updating packages
        apt-get update -y
        #Installing Packages
        apt-get install -y openvpn easy-rsa
        #Extracting conf File
        gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz > /etc/openvpn/server.conf
        #Modifying Config File
        sed -i 's/dh1024.pem/dh2048.pem/' /etc/openvpn/server.conf
        sed -i 's/;push "red/push "red/' /etc/openvpn/server.conf
        sed -i 's/;push "dh/push "dh/g' /etc/openvpn/server.conf
        sed -i 's/;user/user/' /etc/openvpn/server.conf
        sed -i 's/;group/group/' /etc/openvpn/server.conf
        #Enabling IP Forward
        echo 1 > /proc/sys/net/ipv4/ip_forward
        sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf
        #Defining Crypto Parameters
        cp -r /usr/share/easy-rsa/ /etc/openvpn
        mkdir /etc/openvpn/easy-rsa/keys
        sed -i 's/KEY_COUNTRY="US"/KEY_COUNTRY="${var.custom_VKEY_COUNTRY}"/' /etc/openvpn/easy-rsa/vars
        sed -i 's/KEY_PROVINCE="CA"/KEY_PROVINCE="${var.custom_VKEY_PROVINCE}"/' /etc/openvpn/easy-rsa/vars
        sed -i 's/KEY_CITY="SanFrancisco"/KEY_CITY="${var.custom_VKEY_CITY}"/' /etc/openvpn/easy-rsa/vars
        sed -i 's/KEY_ORG="Fort-Funston"/KEY_ORG="${var.custom_VKEY_ORG}"/' /etc/openvpn/easy-rsa/vars
        sed -i 's/KEY_EMAIL="me@myhost.mydomain"/KEY_EMAIL="${var.custom_VKEY_EMAIL}"/' /etc/openvpn/easy-rsa/vars
        sed -i 's/KEY_OU="MyOrganizationalUnit"/KEY_OU="${var.custom_VKEY_OU}"/' /etc/openvpn/easy-rsa/vars
        sed -i 's/EasyRSA/server/' /etc/openvpn/easy-rsa/vars
        #Parameters Creation
        openssl dhparam -out /etc/openvpn/dh2048.pem 2048
        #Creating client's base file 
        cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf /etc/openvpn/client.ovpn
        sed -i s/my-server-1/$IPVAR/ /etc/openvpn/client.ovpn
        sed -i 's/;user/user/' /etc/openvpn/client.ovpn
        sed -i 's/;group/group/' /etc/openvpn/client.ovpn
        sed -i 's/ca ca.crt/#ca ca.crt/' /etc/openvpn/client.ovpn
        sed -i 's/cert client.crt/#cert client.crt/' /etc/openvpn/client.ovpn
        sed -i 's/key client.key/#key client.key/' /etc/openvpn/client.ovpn
        #Creating Script to define clients
        echo "echo \"Please type the client number/name:\"" >> /home/$KODING_USER/client.sh
        echo "read i" >> /home/$KODING_USER/client.sh
        echo "cd /etc/openvpn/easy-rsa; . ./vars; ./build-key client\$i" >> /home/$KODING_USER/client.sh
        echo "service openvpn restart" >> /home/$KODING_USER/client.sh
        echo "cp /etc/openvpn/client.ovpn /etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh
        echo "echo \"<ca>\" >>/etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh        
        echo "cat /etc/openvpn/easy-rsa/keys/ca.crt >> /etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh
        echo "echo \"</ca>\" >>/etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh 
        echo "echo \"<cert>\" >>/etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh        
        echo "cat /etc/openvpn/easy-rsa/keys/client\$i.crt >> /etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh
        echo "echo \"</cert>\" >>/etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh 
        echo "echo \"<key>\" >>/etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh        
        echo "cat /etc/openvpn/easy-rsa/keys/client\$i.key >> /etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh
        echo "echo \"</key>\" >>/etc/openvpn/clientF\$i.ovpn" >> /home/$KODING_USER/client.sh
        echo "echo \"Tranfer the file: /etc/openvpn/clientF\$i.ovpn to the new client's PC\"" >> /home/$KODING_USER/client.sh
        #Creating Script to finish server configuration
        echo "cd /etc/openvpn/easy-rsa; . ./vars; ./clean-all; ./build-ca; ./build-key-server server" >> /home/$KODING_USER/final.sh
        echo "cp /etc/openvpn/easy-rsa/keys/server.crt /etc/openvpn" >> /home/$KODING_USER/final.sh
        echo "cp /etc/openvpn/easy-rsa/keys/server.key /etc/openvpn" >> /home/$KODING_USER/final.sh
        echo "cp /etc/openvpn/easy-rsa/keys/ca.crt /etc/openvpn" >> /home/$KODING_USER/final.sh
        echo "service openvpn start" >> /home/$KODING_USER/final.sh
        chmod +x /home/$KODING_USER/*.sh
        ##MESSAGES
        echo "=============================================================================="
        echo "To finish the OpenVPN Server configuration run: sudo /home/$KODING_USER/final.sh"
        echo "To create new clients run: sudo /home/$KODING_USER/client.sh"
        echo "The server's public IP Address is: $IPVAR"
        echo "=============================================================================="
        #Welcome message
        echo "echo "'=============================================================================='"" >> /home/$KODING_USER/.bashrc
        echo "echo "To finish the OpenVPN Server configuration run: sudo /home/$KODING_USER/final.sh"" >> /home/$KODING_USER/.bashrc
        echo "echo "To create new clients run: sudo /home/$KODING_USER/client.sh"" >> /home/$KODING_USER/.bashrc
        echo "echo "The server's public IP Address is: $IPVAR"" >> /home/$KODING_USER/.bashrc
        echo "echo "'=============================================================================='"" >> /home/$KODING_USER/.bashrc
        # please note: all commands under user_data will be run as root.
        # now add your credentials and save this stack.
        # once vm finishes building, you can see this file by typing
        # ls /
        #