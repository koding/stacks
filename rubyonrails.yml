# Here is your stack preview
# You can make advanced changes like modifying your VM,
# installing packages, and running shell commands.

provider:
  aws:
    access_key: '${var.aws_access_key}'
    secret_key: '${var.aws_secret_key}'
resource:
  aws_instance:
    # this is the name of your VM
    ruby-on-rails:
      # select your instance_type here: eg. c3.xlarge
      instance_type: t2.medium
      # select your ami (optional) eg. ami-xxxxx (it should be based on ubuntu 14.04)
      ami: ''
      # we will tag the instance here so you can identify it when you login to your AWS console
      tags:
        Name: '${var.koding_user_username}-${var.koding_group_slug}'
      # on user_data section we will write bash and configure our VM
      user_data: |-
        # user_data Script:
        set -e
        export DEBIAN_FRONTEND=noninteractive
        #Getting user name and IP
        export KODING_USER=${var.koding_user_username}
        IPVAR=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
        #Setting Path in user profile
        echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> /home/$KODING_USER/.bashrc
        echo 'eval "$(rbenv init -)"' >> /home/$KODING_USER/.bashrc
        echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> /home/$KODING_USER/.bashrc
        #Adding new source
        DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
        CODENAME=$(lsb_release -cs)
        echo "deb https://deb.nodesource.com/node_4.x $CODENAME main" > /etc/apt/sources.list.d/nodesource.list
        echo "deb-src https://deb.nodesource.com/node_4.x $CODENAME main" >> /etc/apt/sources.list.d/nodesource.list
        #Updating packages
        apt-get update -y
        #Installing Packages
        apt-get install -y mysql-server apache2 git make mysql-client libmysqlclient-dev libssl-dev libreadline-dev
        apt-get install -y nodejs --force-yes
        sleep 2
        su - $KODING_USER -c "git clone https://github.com/rbenv/rbenv.git ~/.rbenv"
        sleep 2
        su - $KODING_USER -c "git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build"
        sleep 2
        a2enmod rewrite
        sleep 2
        echo '#!/bin/sh' >> /home/$KODING_USER/installror.sh
        echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"' >> /home/$KODING_USER/installror.sh
        echo 'echo "2 $PATH"' >> /home/$KODING_USER/installror.sh
        echo "rbenv install 2.3.1" >> /home/$KODING_USER/installror.sh
        echo "sleep 2" >> /home/$KODING_USER/installror.sh
        echo "rbenv global 2.3.1" >> /home/$KODING_USER/installror.sh
        echo "sleep 2" >> /home/$KODING_USER/installror.sh
        echo "gem install bundler" >> /home/$KODING_USER/installror.sh
        echo "sleep 2" >> /home/$KODING_USER/installror.sh
        echo "gem install rails -v 4.2.6" >> /home/$KODING_USER/installror.sh
        echo "sleep 2" >> /home/$KODING_USER/installror.sh
        echo "rbenv rehash" >> /home/$KODING_USER/installror.sh
        chmod +x  /home/$KODING_USER/installror.sh
        su - $KODING_USER -c "./installror.sh"
        # please note: all commands under user_data will be run as root.
        # now add your credentials and save this stack.
        # once vm finishes building, you can see this file by typing
        # ls /
        #
