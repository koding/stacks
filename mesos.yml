# Here is your stack preview
# You can make advanced changes like modifying your VM,
# installing packages, and running shell commands.

provider:
  aws:
    access_key: '${var.aws_access_key}'
    secret_key: '${var.aws_secret_key}'
resource:
  aws_instance:
    master:
      instance_type: m4.2xlarge
      ami: ''
      root_block_device:
        volume_size: 50
      tags:
        Name: '${var.koding_user_username}-${var.koding_group_slug}'
      user_data: |-
        # :
        export DEBIAN_FRONTEND=noninteractive
        #setting the new source
        apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF
        DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
        CODENAME=$(lsb_release -cs)
        echo "deb http://repos.mesosphere.io/$DISTRO $CODENAME main" | tee /etc/apt/sources.list.d/mesosphere.list
        add-apt-repository ppa:openjdk-r/ppa
        
        #Updating packages
        apt-get update -y
        apt-get install -y openjdk-8-jdk
        #installing Mesosphere
        sudo apt-get install -y mesosphere
        #Getting the IP add
        IPVAR1=`ip addr | grep -Po '(?!(inet 127.\d.\d.1))(inet \K(\d{1,3}\.){3}\d{1,3})'`
        
        #modifying the Zookepper mesos file
        mkdir -p /var/zookeeper
        chown -R zookeeper /var/zookeeper
        echo "zk://$IPVAR1:2181/mesos" > /etc/mesos/zk
        echo "1" > /etc/zookeeper/conf/myid
        echo "server.1=$IPVAR1:2888:3888" > /etc/zookeeper/conf/zoo.cfg
        echo "dataDir=/var/zookeeper" >> /etc/zookeeper/conf/zoo.cfg
        echo "clientPort=2181" >> /etc/zookeeper/conf/zoo.cfg
        #Quorum Value Defaul=1
        #echo "1" > /etc/mesos-master/quorum
        echo $IPVAR1 > /etc/mesos-master/ip
        echo $IPVAR1 > /etc/mesos-master/hostname
        mkdir -p /etc/marathon/conf
        cp /etc/mesos-master/hostname /etc/marathon/conf
        cp /etc/mesos/zk /etc/marathon/conf/master
        sed 's/mesos/marathon/' /etc/marathon/conf/master > /etc/marathon/conf/zk
        echo 'docker,mesos' > /etc/mesos-slave/containerizers
        echo '5mins' > /etc/mesos-slave/executor_registration_timeout
        stop mesos-slave
        echo "manual" | sudo tee /etc/init/mesos-slave.override
        stop zookeeper
        sleep 5
        start zookeeper
        start mesos-master
        start marathon
        
        apt-get install -y nginx
        
        PUBLIC_IP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
        
        wget https://github.com/mesosphere/mesos-dns/releases/download/v0.5.2/mesos-dns-v0.5.2-linux-amd64
        mv mesos-dns-v0.5.2-linux-amd64 /usr/local/sbin/mesos-dns
        chmod +x /usr/local/sbin/mesos-dns 
        
        cat <<EOT >> /etc/mesos-dns-config.json
        {
          "zk": "zk://$IPVAR1:2181/mesos",
          "masters": ["$IPVAR1:5050"],
          "refreshSeconds": 60,
          "ttl": 60,
          "domain": "mesos",
          "port": 53,
          "resolvers": ["8.8.8.8"],
          "timeout": 5, 
          "httpon": true,
          "dnson": true,
          "httpport": 8123,
          "externalon": true,
          "listener": "0.0.0.0",
          "SOAMname": "ns1.mesos",
          "SOARname": "root.ns1.mesos",
          "SOARefresh": 60,
          "SOARetry":   600,
          "SOAExpire":  86400,
          "SOAMinttl": 60,
          "IPSources": ["mesos", "host"]
        }
        EOT
        mesos-dns -config=/etc/mesos-dns-config.json & 
        sed -i "s/nameserver 10.0.0.2/nameserver $IPVAR1\nnameserver 10.0.0.2/" /etc/resolv.conf
        echo " "
        echo "=========================================================================="
        echo "You can manage and monitor Mesosphere with the web UI on port 5050"
        echo "Make sure that port 5050 is open in your firewall or security group."
        echo "You can access the Web UI at http://$PUBLIC_IP:5050"
        echo " "
        echo "You can manage and Marathon with the web UI on port 8080"
        echo "Make sure that port 8080 is open in your firewall or security group."
        echo "You can access the Web UI at http://$PUBLIC_IP:8080"
        echo "=========================================================================="
        echo " "
    slave:
      instance_type: m4.2xlarge
      ami: ''
      count: 3
      root_block_device:
        volume_size: 50
      tags:
        Name: '${var.koding_user_username}-${var.koding_group_slug}'
      user_data: |-
        export DEBIAN_FRONTEND=noninteractive
        #setting the new source
        apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF
        DISTRO=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
        CODENAME=$(lsb_release -cs)
        echo "deb http://repos.mesosphere.io/$DISTRO $CODENAME main" | sudo tee /etc/apt/sources.list.d/mesosphere.list
        add-apt-repository ppa:openjdk-r/ppa
        apt-get install apt-transport-https ca-certificates
        apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
        echo 'deb https://apt.dockerproject.org/repo ubuntu-trusty main' > /etc/apt/sources.list.d/docker.list
        #Updating packages
        apt-get update -y
        apt-get install -y openjdk-8-jdk
        #Installing mesos
        sudo apt-get install -y mesos
        #Getting the IP add
        IPVAR1=${aws_instance.master.private_ip}
        IPVAR=`ip addr | grep -Po '(?!(inet 127.\d.\d.1))(inet \K(\d{1,3}\.){3}\d{1,3})'`
        
        stop zookeeper
        echo manual | sudo tee /etc/init/zookeeper.override
        stop mesos-master
        manual | sudo tee /etc/init/mesos-master.override
        
        #modifying the Zookepper mesos file
        echo "zk://$IPVAR1:2181/mesos" > /etc/mesos/zk
        
        #Add additional ports
        echo "ports:[8089-8090, 6378-6379, 15671-15672, 5671-5672, 25671-25672, 5431-5432, 27016-27017, 31000-32000]" > /etc/mesos-slave/resources
        
        echo $IPVAR > /etc/mesos-slave/ip
        echo $IPVAR > /etc/mesos-slave/hostname
        
        echo 'docker,mesos' > /etc/mesos-slave/containerizers
        echo '5mins' > /etc/mesos-slave/executor_registration_timeout
        
        #Install Docker engine
        apt-get purge -y lxc-docker
        apt-get install -y --force-yes linux-image-extra-$(uname -r) docker-engine
        
        sed -i "s/nameserver 10.0.0.2/nameserver ${aws_instance.master.private_ip}\nnameserver 10.0.0.2/" /etc/resolv.conf
        
        start mesos-slave
        
