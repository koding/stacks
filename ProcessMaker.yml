# Here is your stack preview
# You can make advanced changes like modifying your VM,
# installing packages, and running shell commands.

provider:
  aws:
    access_key: '${var.aws_access_key}'
    secret_key: '${var.aws_secret_key}'
resource:
  aws_instance:
    # this is the name of your VM
    process-maker:
      # select your instance_type here: eg. c3.xlarge
      instance_type: t2.medium
      # select your ami (optional) eg. ami-xxxxx (it should be based on ubuntu 14.04)
      ami: ''
      # we will tag the instance here so you can identify it when you login to your AWS console
      tags:
        Name: '${var.koding_user_username}-${var.koding_group_slug}'
      # on user_data section we will write bash and configure our VM
      user_data: |-
        # user_data Script:
        set -e
        export DEBIAN_FRONTEND=noninteractive
        #Adding new source
        #sudo add-apt-repository ppa:ondrej/php5-5.6
        apt-get update -y
        #Installing Packages
        apt-get install -y mysql-server php5 apache2 php5-mysql php5-gd php5-ldap php5-curl php5-cli php5-mcrypt
        #Updating files
        #sed -i 's/memory_limit = 128M/memory_limit = 120M/g' /etc/php5/apache2/php.ini
        sed -i 's/short_open_tag = Off/short_open_tag = On/g' /etc/php5/apache2/php.ini
        #Writing the file to create the DB
        echo "CREATE DATABASE pmdb;" >>pm.sql
        echo "GRANT ALL PRIVILEGES ON pmadb.*" >>pm.sql
        echo "TO pmuser@localhost" >>pm.sql
        echo "IDENTIFIED BY 'passwone';" >>pm.sql
        echo "FLUSH PRIVILEGES;" >>pm.sql
        #Running script to create the DB
        cat pm.sql | sudo mysql --defaults-extra-file=/etc/mysql/debian.cnf
        #username and IP
        export KODING_USER=${var.koding_user_username}
        IPADD=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
        #Downloading processMaker
        wget ${var.custom_server}/processmaker-3.0.1.8-community.tar.gz
        tar -xf processmaker-3.0.1.8-community.tar.gz -C /opt/
        mkdir -p /opt/processmaker/etc/
        echo "#processmaker virtual host" >>/opt/processmaker/etc/pmos.conf
        echo "<VirtualHost *:8015 >" >>/opt/processmaker/etc/pmos.conf
        echo "    ServerName \"pm.example.com\"" >>/opt/processmaker/etc/pmos.conf
        echo "    DocumentRoot /opt/processmaker/workflow/public_html" >>/opt/processmaker/etc/pmos.conf
        echo "    DirectoryIndex index.html index.php" >>/opt/processmaker/etc/pmos.conf
        echo "    <Directory /opt/processmaker/workflow/public_html>" >>/opt/processmaker/etc/pmos.conf
        echo "        Options Indexes FollowSymLinks MultiViews" >>/opt/processmaker/etc/pmos.conf
        echo "        AddDefaultCharset UTF-8" >>/opt/processmaker/etc/pmos.conf
        echo "        AllowOverride None" >>/opt/processmaker/etc/pmos.conf
        echo "        Require all granted" >>/opt/processmaker/etc/pmos.conf
        echo "        ExpiresActive On" >>/opt/processmaker/etc/pmos.conf
        echo "        <IfModule mod_rewrite.c>" >>/opt/processmaker/etc/pmos.conf
        echo "            RewriteEngine On" >>/opt/processmaker/etc/pmos.conf
        echo "            RewriteCond %{REQUEST_FILENAME} !-f" >>/opt/processmaker/etc/pmos.conf
        echo "            RewriteRule ^.*/(.*)\$ app.php [QSA,L,NC]" >>/opt/processmaker/etc/pmos.conf
        echo "        </IfModule>" >>/opt/processmaker/etc/pmos.conf
        echo "        #Deflate filter is optional. It reduces download size, but adds slightly more CPU processing:" >>/opt/processmaker/etc/pmos.conf
        echo "        AddOutputFilterByType DEFLATE text/html" >>/opt/processmaker/etc/pmos.conf
        echo "    </Directory>" >>/opt/processmaker/etc/pmos.conf
        echo "</VirtualHost>" >>/opt/processmaker/etc/pmos.conf
        cp /opt/processmaker/etc/pmos.conf /etc/apache2/sites-available/
        chown -R www-data:www-data /opt/processmaker
        chmod 770 /opt/processmaker/shared
        cd /opt/processmaker/workflow/engine/; chmod 770 config content/languages plugins xmlform js/labels
        ln -s /etc/apache2/mods-available/rewrite.load /etc/apache2/mods-enabled/rewrite.load                            
        ln -s /etc/apache2/mods-available/expires.load /etc/apache2/mods-enabled/expires.load 
        echo "Listen 8015" >> /etc/apache2/ports.conf
        sed -i 's/5.5.33/5.4.0/g' /opt/processmaker/workflow/engine/controllers/installer.php
        php5enmod mcrypt
        a2ensite pmos.conf
        service mysql restart
        service apache2 restart
        echo "To Continue the process open a browser and go to: http://$IPADD:8015/"
        # please note: all commands under user_data will be run as root.
        # now add your credentials and save this stack.
        # once vm finishes building, you can see this file by typing
        # ls /
        #